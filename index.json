{
	"openapi": "3.0.3",
	"info": {
		"version": "0.0.1-alpha",
		"title": "PakaiWA",
		"description": "Unofficial WhatsApp API",
		"contact": {
			"name": "Kelvin Anggara",
			"email": "kelvin.kanggara@gmail.com",
			"url": "https://kanggara.me"
		},
		"license": {
			"name": "MIT",
			"url": "https://docs.pakaiwa.my.id/LICENSE.md"
		}
	},
	"servers": [
		{
			"description": "Unofficial WhatsApp API",
			"url": "https://{environment}.pakaiwa.my.id/v1",
			"variables": {
				"environment": {
					"description": "Server Environment",
					"default": "api",
					"enum": ["dev", "test", "api"]
				}
			}
		}
	],
	"externalDocs": {
		"description": "Find out more about WhatsAPI",
		"url": "https://docs.pakaiwa.my.id"
	},
	"paths": {
		"/devices": {
			"description": "Sebelum dapat mengirim pesan menggunakan APImaka anda perlu menambahkan device terlebih dahulu. Anda dapat memiliki lebih dari satu device pada API . Sebuah device harusnya terasosiasi dengan sebuah nomor WhatsApp.",
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Devices"],
				"summary": "Add Devices",
				"description": "Endpoint ini untuk menambahkan device baru yang bisa digunakan untuk pairing ke API .",
				"requestBody": {
					"description": "ID dari device yang ingin ditambahkan.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/device_id"
							},
							"examples": {
								"iphone-x": {
									"description": "Device ID dari iPhone X",
									"value": {
										"device_id": "iphone-x"
									}
								},
								"iphone-xr": {
									"description": "Device ID dari iPhone XR",
									"value": {
										"device_id": "iphone-xr"
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"id": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										},
										"status": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										},
										"created_at": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										},
										"meta": {
											"type": "object",
											"additionalProperties": false,
											"properties": {
												"location": {
													"type": "string",
													"maxLength": 100,
													"pattern": "[\\n\\s\\w\\W^$]"
												}
											}
										}
									}
								},
								"examples": {
									"success": {
										"description": "Success Add device",
										"value": {
											"id": "iphone-x",
											"status": "disconnected",
											"created_at": "2023-06-22T06:26:42.531Z",
											"meta": {
												"location": "https://api./v1/devices/iphone-x"
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"BadRequest": {
										"$ref": "#/components/examples/BadRequest"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Unauthorized": {
										"$ref": "#/components/examples/Unauthorized"
									}
								}
							}
						}
					},
					"403": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Forbidden": {
										"$ref": "#/components/examples/Forbidden"
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Forbidden": {
										"$ref": "#/components/examples/NotFound"
									}
								}
							}
						}
					},
					"default": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": false,
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean"
										},
										"message": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										},
										"data": {
											"type": "object",
											"additionalProperties": false
										}
									}
								},
								"examples": {
									"defaultResponse": {
										"$ref": "#/components/examples/defaultResponse"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Devices"],
				"summary": "Get All Devices list",
				"description": "Endpoint ini untuk melihat semua devices yang sudah dibuat oleh akun anda. Maksimum data yang dikembalikan per page adalah 10 item. Item terkahir yang dikembalikan per halaman ada pada properti last_key. Properti ini kemudian dapat digunakan untuk merequest halaman berikutnya dengan menggunakan query string parameter start_key. Jika nilai dari last_key adalah null maka data sudah habis dan ini adalah halaman terakhir.",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"meta": {
											"type": "object",
											"additionalProperties": false,
											"properties": {
												"last_key": {
													"type": "string",
													"maxLength": 500,
													"nullable": true,
													"pattern": "[\\n\\s\\w\\W^$]"
												}
											}
										}
									}
								},
								"examples": {
									"success": {
										"description": "Success Add device",
										"value": {
											"meta": {
												"last_key": "iphone-x"
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"BadRequest": {
										"$ref": "#/components/examples/BadRequest"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Unauthorized": {
										"$ref": "#/components/examples/Unauthorized"
									}
								}
							}
						}
					},
					"403": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Forbidden": {
										"$ref": "#/components/examples/Forbidden"
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Forbidden": {
										"$ref": "#/components/examples/NotFound"
									}
								}
							}
						}
					},
					"default": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": false,
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean"
										},
										"message": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										},
										"data": {
											"type": "object",
											"additionalProperties": false
										}
									}
								},
								"examples": {
									"defaultResponse": {
										"$ref": "#/components/examples/defaultResponse"
									}
								}
							}
						}
					}
				}
			}
		},
		"/devices/{device_id}": {
			"description": "Sebelum dapat mengirim pesan menggunakan APImaka anda perlu menambahkan device terlebih dahulu. Anda dapat memiliki lebih dari satu device pada API . Sebuah device harusnya terasosiasi dengan sebuah nomor WhatsApp.",
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Devices"],
				"summary": "Get Device Info",
				"description": "Endpoint ini digunakan untuk mendapatkan informasi pada sebuah device berdasarkan DEVICE_ID.",
				"parameters": [
					{
						"$ref": "#/components/parameters/device_id"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"id": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										},
										"status": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										},
										"created_at": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										},
										"connected_at": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										},
										"disconnected_at": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										},
										"disconnected_reason": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										}
									}
								},
								"examples": {
									"success": {
										"description": "Success Add device",
										"value": {
											"id": "iphone-x-pro",
											"status": "disconnected",
											"created_at": "2021-07-09T15:11:53.657Z",
											"connected_at": "2021-07-18T13:26:57.698Z",
											"disconnected_at": "2021-07-18T13:27:33.089Z",
											"disconnected_reason": "Send message timeout."
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"BadRequest": {
										"$ref": "#/components/examples/BadRequest"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Unauthorized": {
										"$ref": "#/components/examples/Unauthorized"
									}
								}
							}
						}
					},
					"403": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Forbidden": {
										"$ref": "#/components/examples/Forbidden"
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Forbidden": {
										"$ref": "#/components/examples/NotFound"
									}
								}
							}
						}
					},
					"default": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": false,
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean"
										},
										"message": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										},
										"data": {
											"type": "object",
											"additionalProperties": false
										}
									}
								},
								"examples": {
									"defaultResponse": {
										"$ref": "#/components/examples/defaultResponse"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Devices"],
				"summary": "Delete Device",
				"description": "Endpoint ini digunakan untuk menghapus sebuah device berdasarkan DEVICE_ID. Setelah device dihapus maka request berikutnya seperti mengirim pesan yang menggunakan DEVICE_ID akan gagal.",
				"parameters": [
					{
						"$ref": "#/components/parameters/device_id"
					}
				],
				"responses": {
					"204": {
						"description": "HTTP/1.1 204 No Content"
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"BadRequest": {
										"$ref": "#/components/examples/BadRequest"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Unauthorized": {
										"$ref": "#/components/examples/Unauthorized"
									}
								}
							}
						}
					},
					"403": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Forbidden": {
										"$ref": "#/components/examples/Forbidden"
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Forbidden": {
										"$ref": "#/components/examples/NotFound"
									}
								}
							}
						}
					},
					"default": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": false,
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean"
										},
										"message": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										},
										"data": {
											"type": "object",
											"additionalProperties": false
										}
									}
								},
								"examples": {
									"defaultResponse": {
										"$ref": "#/components/examples/defaultResponse"
									}
								}
							}
						}
					}
				}
			}
		},
		"/qr": {
			"description": "Endpoint ini digunakan untuk mendapatkan QR code yang digunakan untuk melakukan pairing device ke API.",
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["QR"],
				"summary": "Get QR Code",
				"description": "Endpoint ini digunakan untuk mendapatkan QR code yang digunakan untuk melakukan pairing device ke API.",
				"parameters": [
					{
						"$ref": "#/components/parameters/device_id_query"
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"meta": {
											"type": "object",
											"additionalProperties": false,
											"properties": {
												"qr_code": {
													"type": "string",
													"maxLength": 500,
													"pattern": "[ -//._=,+?&}{/[/A-Za-z0-9:\"\"@%\\n\\s\\w\\W^$]"
												},
												"image_url": {
													"type": "string",
													"maxLength": 500,
													"pattern": "[ -//._=,+?&}{/[/A-Za-z0-9:\"\"@%\\n\\s\\w\\W^$]"
												}
											}
										}
									}
								},
								"examples": {
									"success": {
										"description": "Success",
										"value": {
											"qr_code": "1@U2tS5Q1elzj6Y7IAKDurwvja47S",
											"image_url": "qrcode=1%40U2tS5Q1elzj6Y7IAKDurwvja47S"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"BadRequest": {
										"$ref": "#/components/examples/BadRequest"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Unauthorized": {
										"$ref": "#/components/examples/Unauthorized"
									}
								}
							}
						}
					},
					"403": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Forbidden": {
										"$ref": "#/components/examples/Forbidden"
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/error"
								},
								"examples": {
									"Forbidden": {
										"$ref": "#/components/examples/NotFound"
									}
								}
							}
						}
					},
					"default": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": false,
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean"
										},
										"message": {
											"type": "string",
											"maxLength": 100,
											"pattern": "[\\n\\s\\w\\W^$]"
										},
										"data": {
											"type": "object",
											"additionalProperties": false
										}
									}
								},
								"examples": {
									"defaultResponse": {
										"$ref": "#/components/examples/defaultResponse"
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"parameters": {
			"device_id": {
				"name": "device_id",
				"in": "path",
				"description": "Device ID",
				"required": true,
				"schema": {
					"type": "string",
					"maxLength": 100,
					"pattern": "[\\n\\s\\w\\W^$]"
				},
				"example": "iphone-x"
			},
			"device_id_query": {
				"name": "device_id",
				"in": "query",
				"description": "Device ID",
				"required": true,
				"schema": {
					"type": "string",
					"maxLength": 100,
					"pattern": "[\\n\\s\\w\\W^$]"
				},
				"example": "iphone-x"
			}
		},
		"examples": {
			"defaultResponse": {
				"description": "400 Bad Request",
				"summary": "Device id already exists, choose another one",
				"value": {
					"success": true,
					"message": "Success.",
					"data": {}
				}
			},
			"BadRequest": {
				"description": "400 Bad Request",
				"summary": "Device id already exists, choose another one",
				"value": {
					"message": "Error: Device id already exists, choose another one."
				}
			},
			"Unauthorized": {
				"description": "401 Missing API token.",
				"summary": "API Token is missing/not provided",
				"value": {
					"message": "Missing API token."
				}
			},
			"Forbidden": {
				"description": "403 Invalid API token.",
				"summary": "API Token is invalid",
				"value": {
					"message": "Invalid API token."
				}
			},
			"NotFound": {
				"description": "404 Not Found",
				"summary": "Not Found.",
				"value": {
					"message": "Error: Device not found."
				}
			}
		},
		"responses": {},
		"schemas": {
			"device_id": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"device_id": {
						"type": "string",
						"maxLength": 500,
						"pattern": "[\\n\\s\\w\\W^$]"
					}
				}
			},
			"error": {
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"maxLength": 500,
						"pattern": "[\\n\\s\\w\\W^$]"
					}
				}
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"description": "Authentication with device id"
			}
		}
	}
}
