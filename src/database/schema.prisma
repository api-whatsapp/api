generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  quota        Int       @default(100)
  level        UserLevel @default(user)
  token        String    @unique @db.VarChar(100)
  created_at   DateTime  @default(now())
  last_request DateTime? @updatedAt
  Device       Device[]

  @@map("users")
}

model qrCode {
  id          Int       @id @default(autoincrement())
  qr          String    @db.VarChar(500)
  created_at  DateTime  @default(now())
  last_update DateTime? @updatedAt

  @@map("qr_code")
}

model Message {
  id         String        @unique
  text       String
  payload    String
  status     MessageStatus @default(PENDING)
  message    String        @db.VarChar(100)
  send_at    DateTime      @default(now())
  updated_at DateTime?     @updatedAt

  @@map("messages")
}

model Device {
  id                  Int          @id @default(autoincrement())
  userEmail           String?
  device_id           String       @db.VarChar(100)
  status              DeviceStatus @default(disconnected)
  created_at          DateTime     @default(now())
  connected_at        DateTime?    @db.Timestamp
  disconnected_at     DateTime?    @db.Timestamp
  disconnected_reason String       @default("") @db.VarChar(100)
  User                User?        @relation(fields: [userEmail], references: [email])

  @@map("devices")
}

enum DeviceStatus {
  connected
  disconnected
}

enum MessageStatus {
  ERROR
  PENDING
  SERVER_ACK
  DELIVERY_ACK
  READ
  PLAYED
}

enum UserLevel {
  user
  member
  premium
}
